name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on PR to main branch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run tests
        run: |
          pytest tests/

  build:
    runs-on: ubuntu-latest
    needs: test  # Ensure tests pass before building
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Build Docker image (if using Docker)
      - name: Build Docker image
        run: |
          docker build -t qp-ai-assessment .

      # Push Docker image to DockerHub (optional)
      - name: Push Docker image
        if: github.ref == 'refs/heads/main'  # Only push to DockerHub on main branch
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag qp-ai-assessment ${{ secrets.DOCKER_USERNAME }}/qp-ai-assessment:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/qp-ai-assessment:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build is successful before deployment
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Deploy FastAPI app (using a cloud provider like Heroku, AWS, etc.)
      - name: Deploy FastAPI app to Heroku
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying FastAPI app to Heroku..."
          heroku login -i
          git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
          git push heroku main

  monitor:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run monitoring or performance check (optional)
      - name: Run performance checks
        run: |
          python -c "import time; time.sleep(5)"  # Dummy performance check, replace as necessary
          echo "Performance check completed"